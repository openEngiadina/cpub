#+TITLE: Demonstration
#+PROPERTY: header-args:restclient :eval never-export
#+OPTIONS: toc:nil

A demo of selected features of CPub.

* Create a User

Users can be created from the Elixir shell.

For example we create the user "alice" with password "123":

#+BEGIN_SRC elixir
{:ok, alice} = CPub.User.create("alice")
{:ok, _registration} = CPub.User.Registration.create_internal(alice, "123")
#+END_SRC

This creates the user, an actor profile, inbox and outbox for the user and inserts it into the database in a transaction.

#+BEGIN_SRC restclient :exports both
GET http://localhost:4000/users/alice
#+END_SRC

#+RESULTS:
#+BEGIN_SRC js
{
  "@context": [
    "https://www.w3.org/ns/activitystreams#",
    "http://litepub.social/ns#",
    "http://www.w3.org/ns/ldp#"
  ],
  "endpoints": {
    "oauthAuthorizationEndpoint": "http://localhost:4000/oauth/authorize",
    "oauthRegistrationEndpoint": "http://localhost:4000/oauth/clients",
    "oauthTokenEndpoint": "http://localhost:4000/oauth/token"
  },
  "followers": "http://localhost:4000/users/alice/followers",
  "following": "http://localhost:4000/users/alice/following",
  "id": "http://localhost:4000/users/alice",
  "inbox": "http://localhost:4000/users/alice/inbox",
  "outbox": "http://localhost:4000/users/alice/outbox",
  "preferredUsername": "alice",
  "published": "2022-04-23T11:28:01",
  "type": "Person"
}
// GET http://localhost:4000/users/alice
// HTTP/1.1 200 OK
// cache-control: max-age=0, private, must-revalidate
// content-length: 654
// content-type: application/activity+json; charset=utf-8
// date: Sat, 23 Apr 2022 11:38:00 GMT
// server: Cowboy
// x-request-id: FuiDh0nUdsA3LY4AAAfi
// Request duration: 0.231413s
#+END_SRC

An inbox and outbox has been created for the actor.

The inbox and outbox are protected so that only the user "alice" can access them.

In order to access the inbox and outbox we first need to authenticate and receive authorization.

* Authentication and Authorization

Some resources (such as user inbox and outbox) are accessible only to specific users. If a user wants to access such a resource, they need to authenticate (prove that they are the user) and then receive authorization to access the route. See [[auth.md][Authentication and Authorization]] for a complete reference on how this works.

In this demo we will use the OAuth 2.0 "Resource Owner Password Credentials" flow. We will authenticate with a username and password and immediately receive a token (an Access Token in OAuth terminology) with which we can access the inbox and outbox.

This flow is suitable for clients that are capable of securely handling user secrets (i.e. password).

Web applications are not capable of securely handling user secrets and should use the "Authorization Code" flow. See the documentation on [[./auth.md][Authentication and Authorization]] for more information.

** Resource Owner Password Credentials flow

#+BEGIN_SRC restclient :exports both
POST http://localhost:4000/oauth/token
Content-type: application/json

{"grant_type": "password",
 "username": "alice",
 "password": "123"
}
#+END_SRC

#+RESULTS:
#+BEGIN_SRC js
{
  "access_token": "RWGHS3IVQTWLFKACA2NF5BEXZ6AUS7IQHPPC56IVTUFCBBFQ3MPQ",
  "expires_in": 5184000,
  "me": "http://localhost:4000/users/alice",
  "refresh_token": "34VE2PERVH2JAMXUO5DHNCEVPX7YTRAXPM33YLTJHT22F2WRQ57A",
  "token_type": "bearer"
}
// POST http://localhost:4000/oauth/token
// HTTP/1.1 200 OK
// cache-control: max-age=0, private, must-revalidate
// content-length: 226
// content-type: application/json; charset=utf-8
// date: Sat, 23 Apr 2022 11:38:45 GMT
// server: Cowboy
// x-request-id: FuiDkZmcyX65b_QAAASh
// Request duration: 1.566914s
#+END_SRC

#+RESULTS:

** Authorization Code

For illustration purposes we demonstrate the OAuth "Authorization Code" flow including dynamic client registration.

*** Client registration

Clients can be dynamically registered using the [[https://tools.ietf.org/html/rfc7591][OAuth 2.0 Dynamic Client Registration Protocol (RFC 7591)]]:

#+BEGIN_SRC restclient :exports both
POST http://localhost:4000/oauth/clients
Content-type: application/json

{"client_name": "Demo client",
 "redirect_uris": ["https://example.com/"],
 "scope": "read write"
}
#+END_SRC

#+RESULTS:
#+BEGIN_SRC js
{
  "client_id": "86ff98ca-b61c-4a5f-ba7b-0668f81af113",
  "client_name": "Demo client",
  "client_secret": "VEJ5SCFUA4VNXNE4CO5EV5DTIW377LVFY3AVOIEINKH52GA73BQQ",
  "redirect_uris": [
    "https://example.com/"
  ],
  "scope": [
    "read",
    "write"
  ]
}
// POST http://localhost:4000/oauth/clients
// HTTP/1.1 201 Created
// cache-control: max-age=0, private, must-revalidate
// content-length: 217
// content-type: application/json; charset=utf-8
// date: Thu, 19 Nov 2020 10:17:53 GMT
// server: Cowboy
// x-request-id: Fki_Pz5H44PceYUAADYE
// Request duration: 0.034235s
#+END_SRC

*** Authorization request

A user can now be requested to grant authorization to the client by redirecting to following URL:

http://localhost:4000/oauth/authorize?client_id=86ff98ca-b61c-4a5f-ba7b-0668f81af113&scope=read+write&response_type=code

Note how this includes the ~client_id~, the requested ~scope~ and the ~response_type=code~.

The user will be presented with an interface where they can either "Accept" or "Deny" the request.

If the request is granted the browser will be redirected to the ~redirect_uri~ with an "Authorization Grant" that is encoded in the ~code~ query parameter:

https://example.com/?code=A2DWGE3CLKVGA3XXTFFSZJRM7NJMBZKGPLHLUER3UWDIPK32RQDA

*** Authorization Grant

The Authorization Grant can be exchanged for an access token by making a call to the token endpoint:

#+BEGIN_SRC restclient :exports both
POST http://localhost:4000/oauth/token
Content-type: application/json

{"grant_type": "authorization_code",
 "code": "A2DWGE3CLKVGA3XXTFFSZJRM7NJMBZKGPLHLUER3UWDIPK32RQDA",
 "client_id": "86ff98ca-b61c-4a5f-ba7b-0668f81af113"}
#+END_SRC

#+RESULTS:
#+BEGIN_SRC js
{
  "access_token": "5ULWP3ZLUDZM6UFF55SCQPZRHH45W52SPG4UV4GSYFE2DEPF25GA",
  "expires_in": 5184000,
  "refresh_token": "VZGG2FCYDGXFNTFGIF3Z5GO76VF65QVZE7LSWIMVFQEBKOZQINMQ",
  "token_type": "bearer"
}
// POST http://localhost:4000/oauth/token
// HTTP/1.1 200 OK
// cache-control: max-age=0, private, must-revalidate
// content-length: 185
// content-type: application/json; charset=utf-8
// date: Thu, 19 Nov 2020 11:26:11 GMT
// server: Cowboy
// x-request-id: FkjC6RXdaUxefXAAAFqB
// Request duration: 1.410083s
#+END_SRC

The returned ~access_token~ can be used to access protected resources.

* Inbox and Outbox

We can now access Alice's inbox by using the `access_token`:

#+BEGIN_SRC restclient :exports both
GET http://localhost:4000/users/alice/inbox
Authorization: Bearer RWGHS3IVQTWLFKACA2NF5BEXZ6AUS7IQHPPC56IVTUFCBBFQ3MPQ
#+END_SRC


#+RESULTS:
#+BEGIN_SRC js
{
  "@context": [
    "https://www.w3.org/ns/activitystreams#",
    "http://litepub.social/ns#",
    "http://www.w3.org/ns/ldp#"
  ],
  "id": "http://localhost:4000/users/alice/inbox",
  "totalItems": "0",
  "type": [
    "BasicContainer",
    "OrderedCollection"
  ]
}
// GET http://localhost:4000/users/alice/inbox
// HTTP/1.1 200 OK
// cache-control: max-age=0, private, must-revalidate
// content-length: 221
// content-type: application/activity+json; charset=utf-8
// date: Sat, 23 Apr 2022 11:40:02 GMT
// server: Cowboy
// x-request-id: FuiDo7zTtz90rGAAAATB
// Request duration: 0.206358s
#+END_SRC

As well as the outbox:

#+BEGIN_SRC restclient :exports both
GET http://localhost:4000/users/alice/outbox
Authorization: Bearer RWGHS3IVQTWLFKACA2NF5BEXZ6AUS7IQHPPC56IVTUFCBBFQ3MPQ
#+END_SRC

#+RESULTS:
#+BEGIN_SRC js
{
  "@context": [
    "https://www.w3.org/ns/activitystreams#",
    "http://litepub.social/ns#",
    "http://www.w3.org/ns/ldp#"
  ],
  "id": "http://localhost:4000/users/alice/outbox",
  "totalItems": "0",
  "type": [
    "BasicContainer",
    "OrderedCollection"
  ]
}
// GET http://localhost:4000/users/alice/outbox
// HTTP/1.1 200 OK
// cache-control: max-age=0, private, must-revalidate
// content-length: 222
// content-type: application/activity+json; charset=utf-8
// date: Sat, 23 Apr 2022 11:40:24 GMT
// server: Cowboy
// x-request-id: FuiDqQZf1vfDnPIAAAgi
// Request duration: 0.213143s
#+END_SRC

Both inbox and outbox are still empty.

Note that the inbox and outbox are both a Linked Data Platform basic containers and ActivityStreams collection.

* Posting an Activity

We create another user ~bob~:

#+BEGIN_SRC elixir
{:ok, bob} = CPub.User.create("bob")
{:ok, _registration} = CPub.User.Registration.create_internal(bob, "123")
#+END_SRC

And get an access token for Bob:

#+BEGIN_SRC restclient :exports both
POST http://localhost:4000/oauth/token
Content-type: application/json

{"grant_type": "password",
 "username": "bob",
 "password": "123"
}
#+END_SRC

#+RESULTS:
#+BEGIN_SRC js
{
  "access_token": "GMTHAKCZABOC66AIYEXQV3YAEOFXRSMM37QHKKP6Z2BAYYCH2FNA",
  "expires_in": 5184000,
  "me": "http://localhost:4000/users/bob",
  "refresh_token": "Z3JVRN7YYUD564XVI2NZZZS5L2N6PYSQOWD3YRAAGAIKITQ6U27Q",
  "token_type": "bearer"
}
// POST http://localhost:4000/oauth/token
// HTTP/1.1 200 OK
// cache-control: max-age=0, private, must-revalidate
// content-length: 224
// content-type: application/json; charset=utf-8
// date: Sat, 23 Apr 2022 11:41:58 GMT
// server: Cowboy
// x-request-id: FuiDvpOb3sRy19wAAAUk
// Request duration: 1.574999s
#+END_SRC

We can get Bob's inbox:

#+BEGIN_SRC restclient :exports both
GET http://localhost:4000/users/bob/inbox
Authorization: Bearer GMTHAKCZABOC66AIYEXQV3YAEOFXRSMM37QHKKP6Z2BAYYCH2FNA
#+END_SRC

#+RESULTS:
#+BEGIN_SRC js
{
  "@context": [
    "https://www.w3.org/ns/activitystreams#",
    "http://litepub.social/ns#",
    "http://www.w3.org/ns/ldp#"
  ],
  "id": "http://localhost:4000/users/bob/inbox",
  "totalItems": "0",
  "type": [
    "BasicContainer",
    "OrderedCollection"
  ]
}
// GET http://localhost:4000/users/bob/inbox
// HTTP/1.1 200 OK
// cache-control: max-age=0, private, must-revalidate
// content-length: 219
// content-type: application/activity+json; charset=utf-8
// date: Sat, 23 Apr 2022 11:42:20 GMT
// server: Cowboy
// x-request-id: FuiDxA-LpjzQKiAAAAUB
// Request duration: 0.211907s
#+END_SRC

Also empty. Let's change that.

Alice can post a note to Bob:

#+BEGIN_SRC restclient :exports both
POST http://localhost:4000/users/alice/outbox
Authorization: Bearer RWGHS3IVQTWLFKACA2NF5BEXZ6AUS7IQHPPC56IVTUFCBBFQ3MPQ
Accept: text/turtle
Content-type: text/turtle

@prefix as: <https://www.w3.org/ns/activitystreams#> .

<>
    a as:Create ;
    as:to <local:bob> ;
    as:object _:object .

_:object
    a as:Note ;
    as:content "Good day!"@en ;
    as:content "Guten Tag!"@de ;
    as:content "Grüezi"@gsw ;
    as:content "Bun di!"@roh .
#+END_SRC

#+RESULTS:
#+BEGIN_SRC js
// POST http://localhost:4000/users/alice/outbox
// HTTP/1.1 201 Created
// cache-control: max-age=0, private, must-revalidate
// content-length: 0
// date: Sat, 23 Apr 2022 11:42:58 GMT
// location: http://localhost:4000/uri-res/N2R?urn:erisx2:AAAMOKUACTM4OHXSWPIVSZJDAD7C4GE6GR2Y6IPEESIYM7USXKCOGKANY47P3ZR3JBBIWWPKO47CTPJTUZCVLGGTJRXF3Z6G5A2X4GDXEM
// server: Cowboy
// x-request-id: FuiDzLFI94w236UAAADj
// Request duration: 0.269794s
#+END_SRC

The activity has been created and the IRI of the created activity is returned in the location header.

Note that we used a special IRI <local:bob> to address Bob. This is a temporary hack...stay tuned.

We also use the RDF/Turtle serialization instead of the usual JSON-LD. CPub also supports posting activities as JSON-LD.

The created activity is content-addressed. The IRI is not a HTTP location but a hash of the content (see [[https://openengiadina.net/papers/content-addressable-rdf.html][Content-addressable RDF]] and [[http://purl.org/eris][An Encoding for Robust Immutable Storage]] for more information). The ~/resolve~ endpoint can be used to resolve such content-addressed IRIs.

#+BEGIN_SRC restclient :exports both
GET http://localhost:4000/uri-res/N2R?urn:erisx2:AAAMOKUACTM4OHXSWPIVSZJDAD7C4GE6GR2Y6IPEESIYM7USXKCOGKANY47P3ZR3JBBIWWPKO47CTPJTUZCVLGGTJRXF3Z6G5A2X4GDXEM
Accept: text/turtle
#+END_SRC

#+RESULTS:
#+BEGIN_SRC js
@prefix as: <https://www.w3.org/ns/activitystreams#> .
@prefix foaf: <http://xmlns.com/foaf/0.1/> .
@prefix ldp: <http://www.w3.org/ns/ldp#> .
@prefix litepub: <http://litepub.social/ns#> .
@prefix rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#> .
@prefix rdfs: <http://www.w3.org/2000/01/rdf-schema#> .
@prefix xsd: <http://www.w3.org/2001/XMLSchema#> .

<urn:erisx2:AAAMOKUACTM4OHXSWPIVSZJDAD7C4GE6GR2Y6IPEESIYM7USXKCOGKANY47P3ZR3JBBIWWPKO47CTPJTUZCVLGGTJRXF3Z6G5A2X4GDXEM>
    a as:Create ;
    as:actor <http://localhost:4000/users/alice> ;
    as:object <urn:erisx2:AAALXO2HYAJZDYZ5NOPNG534NMTQW3DHNCR6QTUJRRWLMO52HU5RSYTF7XQBMXQLHDM6VRHO5Y3H7HO34FOZ4UVVST7H3OGPF2AOFFK724> ;
    as:published "2022-04-23T11:42:58"^^xsd:dateTime ;
    as:to <local:bob> .

// GET http://localhost:4000/uri-res/N2R?urn:erisx2:AAAMOKUACTM4OHXSWPIVSZJDAD7C4GE6GR2Y6IPEESIYM7USXKCOGKANY47P3ZR3JBBIWWPKO47CTPJTUZCVLGGTJRXF3Z6G5A2X4GDXEM
// HTTP/1.1 200 OK
// cache-control: max-age=0, private, must-revalidate
// content-length: 763
// content-type: text/turtle; charset=utf-8
// date: Sun, 24 Apr 2022 09:26:43 GMT
// server: Cowboy
// x-request-id: FuiVkdY6_XoJ5-UAAAhC
// Request duration: 0.232080s
#+END_SRC

No authentication is required to access the activity. Simply the fact of knowing the id (which is not guessable) is enough to gain access.

The created object has not been included in the response, it has an id of it's own and can be accessed directly:

#+BEGIN_SRC restclient :exports both
GET http://localhost:4000/uri-res/N2R?urn:erisx2:AAALXO2HYAJZDYZ5NOPNG534NMTQW3DHNCR6QTUJRRWLMO52HU5RSYTF7XQBMXQLHDM6VRHO5Y3H7HO34FOZ4UVVST7H3OGPF2AOFFK724
Accept: text/turtle
#+END_SRC

#+RESULTS:
#+BEGIN_SRC js
@prefix as: <https://www.w3.org/ns/activitystreams#> .
@prefix foaf: <http://xmlns.com/foaf/0.1/> .
@prefix ldp: <http://www.w3.org/ns/ldp#> .
@prefix litepub: <http://litepub.social/ns#> .
@prefix rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#> .
@prefix rdfs: <http://www.w3.org/2000/01/rdf-schema#> .
@prefix xsd: <http://www.w3.org/2001/XMLSchema#> .

<urn:erisx2:AAALXO2HYAJZDYZ5NOPNG534NMTQW3DHNCR6QTUJRRWLMO52HU5RSYTF7XQBMXQLHDM6VRHO5Y3H7HO34FOZ4UVVST7H3OGPF2AOFFK724>
    a as:Note ;
    as:attributedTo <http://localhost:4000/users/alice> ;
    as:content "Guten Tag!"@de, "Good day!"@en, "Grüezi"@gsw, "Bun di!"@roh ;
    as:published "2022-04-23T11:42:58"^^xsd:dateTime ;
    as:to <local:bob> .

// GET http://localhost:4000/uri-res/N2R?urn:erisx2:AAALXO2HYAJZDYZ5NOPNG534NMTQW3DHNCR6QTUJRRWLMO52HU5RSYTF7XQBMXQLHDM6VRHO5Y3H7HO34FOZ4UVVST7H3OGPF2AOFFK724
// HTTP/1.1 200 OK
// cache-control: max-age=0, private, must-revalidate
// content-length: 711
// content-type: text/turtle; charset=utf-8
// date: Sun, 24 Apr 2022 09:27:39 GMT
// server: Cowboy
// x-request-id: FuiVnxJhcXiScvcAAAVE
// Request duration: 0.198157s
#+END_SRC

Note that we can also get the object as JSON-LD:

#+BEGIN_SRC restclient :exports both
GET http://localhost:4000/uri-res/N2R?urn:erisx2:AAALXO2HYAJZDYZ5NOPNG534NMTQW3DHNCR6QTUJRRWLMO52HU5RSYTF7XQBMXQLHDM6VRHO5Y3H7HO34FOZ4UVVST7H3OGPF2AOFFK724
#+END_SRC

#+RESULTS:
#+BEGIN_SRC js
{
  "@context": [
    "https://www.w3.org/ns/activitystreams#",
    "http://litepub.social/ns#",
    "http://www.w3.org/ns/ldp#"
  ],
  "attributedTo": "http://localhost:4000/users/alice",
  "contentMap": {
    "de": "Guten Tag!",
    "en": "Good day!",
    "gsw": "Grüezi",
    "roh": "Bun di!"
  },
  "id": "urn:erisx2:AAALXO2HYAJZDYZ5NOPNG534NMTQW3DHNCR6QTUJRRWLMO52HU5RSYTF7XQBMXQLHDM6VRHO5Y3H7HO34FOZ4UVVST7H3OGPF2AOFFK724",
  "published": "2022-04-23T11:42:58",
  "to": "local:bob",
  "type": "Note"
}
// GET http://localhost:4000/uri-res/N2R?urn:erisx2:AAALXO2HYAJZDYZ5NOPNG534NMTQW3DHNCR6QTUJRRWLMO52HU5RSYTF7XQBMXQLHDM6VRHO5Y3H7HO34FOZ4UVVST7H3OGPF2AOFFK724
// HTTP/1.1 200 OK
// cache-control: max-age=0, private, must-revalidate
// content-length: 434
// content-type: application/activity+json; charset=utf-8
// date: Sun, 24 Apr 2022 09:29:17 GMT
// server: Cowboy
// x-request-id: FuiVtfdcmjaVaXkAAAhi
// Request duration: 0.213141s
#+END_SRC

The activity is now also in Bob's inbox:

#+BEGIN_SRC restclient :exports both
GET http://localhost:4000/users/bob/inbox
Authorization: Bearer GMTHAKCZABOC66AIYEXQV3YAEOFXRSMM37QHKKP6Z2BAYYCH2FNA
#+END_SRC

#+RESULTS:
#+BEGIN_SRC js
{
  "@context": [
    "https://www.w3.org/ns/activitystreams#",
    "http://litepub.social/ns#",
    "http://www.w3.org/ns/ldp#"
  ],
  "id": "http://localhost:4000/users/bob/inbox",
  "items": [
    {
      "@context": [
        "https://www.w3.org/ns/activitystreams#",
        "http://litepub.social/ns#",
        "http://www.w3.org/ns/ldp#"
      ],
      "actor": "http://localhost:4000/users/alice",
      "id": "urn:erisx2:AAAMOKUACTM4OHXSWPIVSZJDAD7C4GE6GR2Y6IPEESIYM7USXKCOGKANY47P3ZR3JBBIWWPKO47CTPJTUZCVLGGTJRXF3Z6G5A2X4GDXEM",
      "object": {
        "attributedTo": "http://localhost:4000/users/alice",
        "contentMap": {
          "de": "Guten Tag!",
          "en": "Good day!",
          "gsw": "Grüezi",
          "roh": "Bun di!"
        },
        "id": "urn:erisx2:AAALXO2HYAJZDYZ5NOPNG534NMTQW3DHNCR6QTUJRRWLMO52HU5RSYTF7XQBMXQLHDM6VRHO5Y3H7HO34FOZ4UVVST7H3OGPF2AOFFK724",
        "published": "2022-04-23T11:42:58",
        "to": "local:bob",
        "type": "Note"
      },
      "published": "2022-04-23T11:42:58",
      "to": "local:bob",
      "type": "Create"
    }
  ],
  "member": [
    {
      "@context": [
        "https://www.w3.org/ns/activitystreams#",
        "http://litepub.social/ns#",
        "http://www.w3.org/ns/ldp#"
      ],
      "actor": "http://localhost:4000/users/alice",
      "id": "urn:erisx2:AAAMOKUACTM4OHXSWPIVSZJDAD7C4GE6GR2Y6IPEESIYM7USXKCOGKANY47P3ZR3JBBIWWPKO47CTPJTUZCVLGGTJRXF3Z6G5A2X4GDXEM",
      "object": {
        "attributedTo": "http://localhost:4000/users/alice",
        "contentMap": {
          "de": "Guten Tag!",
          "en": "Good day!",
          "gsw": "Grüezi",
          "roh": "Bun di!"
        },
        "id": "urn:erisx2:AAALXO2HYAJZDYZ5NOPNG534NMTQW3DHNCR6QTUJRRWLMO52HU5RSYTF7XQBMXQLHDM6VRHO5Y3H7HO34FOZ4UVVST7H3OGPF2AOFFK724",
        "published": "2022-04-23T11:42:58",
        "to": "local:bob",
        "type": "Note"
      },
      "published": "2022-04-23T11:42:58",
      "to": "local:bob",
      "type": "Create"
    }
  ],
  "totalItems": "1",
  "type": [
    "BasicContainer",
    "OrderedCollection"
  ]
}
// GET http://localhost:4000/users/bob/inbox
// HTTP/1.1 200 OK
// cache-control: max-age=0, private, must-revalidate
// content-length: 1604
// content-type: application/activity+json; charset=utf-8
// date: Sun, 24 Apr 2022 09:30:04 GMT
// server: Cowboy
// x-request-id: FuiVwRTloBXDlQcAAAiC
// Request duration: 0.236512s
#+END_SRC

* Public addressing

Alice can create a note that should be publicly accessible by addressing it to the special public collection (~https://www.w3.org/ns/activitystreams#Public~).

#+BEGIN_SRC restclient :exports both
POST http://localhost:4000/users/alice/outbox
Authorization: Bearer RWGHS3IVQTWLFKACA2NF5BEXZ6AUS7IQHPPC56IVTUFCBBFQ3MPQ
Content-type: text/turtle

@prefix as: <https://www.w3.org/ns/activitystreams#> .

<>
    a as:Create ;
    as:to as:Public ;
    as:object _:object .

_:object
    a as:Note ;
    as:content "Hi! This is a public note." .
#+END_SRC

#+RESULTS:
#+BEGIN_SRC js
// POST http://localhost:4000/users/alice/outbox
// HTTP/1.1 201 Created
// cache-control: max-age=0, private, must-revalidate
// content-length: 0
// date: Sun, 24 Apr 2022 09:41:52 GMT
// location: http://localhost:4000/uri-res/N2R?urn:erisx2:AAAAWETADJEVBL3YUAKTUBHHAGG3YFTPE2L7CRRHJPHTO4YVQYAC4FLMIG6U6TV5ORTQF5INROYWT6JDEEHA756NAJI3CDOKXES4G25NAE
// server: Cowboy
// x-request-id: FuiWZ19ue63dKX4AAAmC
// Request duration: 0.220309s
#+END_SRC

This activity has been placed in Alice's outbox:

#+BEGIN_SRC restclient :exports both
GET http://localhost:4000/users/alice/outbox
Authorization: Bearer RWGHS3IVQTWLFKACA2NF5BEXZ6AUS7IQHPPC56IVTUFCBBFQ3MPQ
Accept: text/turtle
#+END_SRC

#+RESULTS:
#+BEGIN_SRC js
@prefix as: <https://www.w3.org/ns/activitystreams#> .
@prefix foaf: <http://xmlns.com/foaf/0.1/> .
@prefix ldp: <http://www.w3.org/ns/ldp#> .
@prefix litepub: <http://litepub.social/ns#> .
@prefix rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#> .
@prefix rdfs: <http://www.w3.org/2000/01/rdf-schema#> .
@prefix xsd: <http://www.w3.org/2001/XMLSchema#> .

<http://localhost:4000/users/alice/outbox>
    a ldp:BasicContainer, as:OrderedCollection ;
    ldp:member <urn:erisx2:AAAMOKUACTM4OHXSWPIVSZJDAD7C4GE6GR2Y6IPEESIYM7USXKCOGKANY47P3ZR3JBBIWWPKO47CTPJTUZCVLGGTJRXF3Z6G5A2X4GDXEM>, <urn:erisx2:AAAO6JVQ2EKGCUPRCYROEYYBGZF25SS7BVHU6GEYGKHEJYLVO2TCXAPPEYUMG7SH3KPZTMM5LLKTDDB75ISC6APKDS4NZ2GHTBQ5UVTTCA> ;
    as:items <urn:erisx2:AAAMOKUACTM4OHXSWPIVSZJDAD7C4GE6GR2Y6IPEESIYM7USXKCOGKANY47P3ZR3JBBIWWPKO47CTPJTUZCVLGGTJRXF3Z6G5A2X4GDXEM>, <urn:erisx2:AAAO6JVQ2EKGCUPRCYROEYYBGZF25SS7BVHU6GEYGKHEJYLVO2TCXAPPEYUMG7SH3KPZTMM5LLKTDDB75ISC6APKDS4NZ2GHTBQ5UVTTCA> ;
    as:totalItems "2"^^xsd:nonNegativeInteger .

// GET http://localhost:4000/users/alice/outbox
// HTTP/1.1 200 OK
// cache-control: max-age=0, private, must-revalidate
// content-length: 1013
// content-type: text/turtle; charset=utf-8
// date: Sun, 24 Apr 2022 09:31:08 GMT
// server: Cowboy
// x-request-id: FuiV0DoFb5c0Dg0AAAEj
// Request duration: 0.181252s
#+END_SRC

It can also be accessed from the special endpoint for public activities:

#+BEGIN_SRC restclient :exports both
GET http://localhost:4000/public
Accept: text/turtle
#+END_SRC

#+RESULTS:
#+BEGIN_SRC js
@prefix as: <https://www.w3.org/ns/activitystreams#> .
@prefix foaf: <http://xmlns.com/foaf/0.1/> .
@prefix ldp: <http://www.w3.org/ns/ldp#> .
@prefix litepub: <http://litepub.social/ns#> .
@prefix rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#> .
@prefix rdfs: <http://www.w3.org/2000/01/rdf-schema#> .
@prefix xsd: <http://www.w3.org/2001/XMLSchema#> .

as:Public
    a ldp:BasicContainer, as:OrderedCollection ;
    ldp:member <urn:erisx2:AAAAWETADJEVBL3YUAKTUBHHAGG3YFTPE2L7CRRHJPHTO4YVQYAC4FLMIG6U6TV5ORTQF5INROYWT6JDEEHA756NAJI3CDOKXES4G25NAE> ;
    as:items <urn:erisx2:AAAAWETADJEVBL3YUAKTUBHHAGG3YFTPE2L7CRRHJPHTO4YVQYAC4FLMIG6U6TV5ORTQF5INROYWT6JDEEHA756NAJI3CDOKXES4G25NAE> ;
    as:totalItems "1"^^xsd:nonNegativeInteger .

// GET http://localhost:4000/public
// HTTP/1.1 200 OK
// cache-control: max-age=0, private, must-revalidate
// content-length: 738
// content-type: text/turtle; charset=utf-8
// date: Sun, 24 Apr 2022 10:05:47 GMT
// server: Cowboy
// x-request-id: FuiXuND3W3yJamEAADJC
// Request duration: 0.163627s
#+END_SRC

* Generality

CPub has an understanding of what activities are (as defined in ActivityStreams) and uses this understanding to figure out what to do when you post something to an outbox.

Other than that, CPub is completely oblivious to what kind of data you create, share or link to (as long as it is RDF).
** Event

For example we can create an event instead of a note (using the schema.org vocabulary):

#+BEGIN_SRC restclient :exports both
POST http://localhost:4000/users/alice/outbox
Authorization: Bearer RWGHS3IVQTWLFKACA2NF5BEXZ6AUS7IQHPPC56IVTUFCBBFQ3MPQ
Accept: text/turtle
Content-type: text/turtle

@prefix as: <https://www.w3.org/ns/activitystreams#> .
@prefix schema: <http://schema.org/> .
@prefix xsd: <http://www.w3.org/2001/XMLSchema> .

<>
    a as:Create ;
    as:to <http://localhost:4000/users/bob> ;
    as:object _:object .

_:object
    a schema:Event ;
    schema:name "My super cool event" ;
    schema:url "http://website-to-my-event" ;
    schema:startDate "2020-04-31T00:00:00+01:00"^^xsd:date ;
    schema:endDate "2020-05-02T00:00:00+01:00"^^xsd:date .

#+END_SRC

#+RESULTS:
#+BEGIN_SRC js
// POST http://localhost:4000/users/alice/outbox
// HTTP/1.1 201 Created
// cache-control: max-age=0, private, must-revalidate
// content-length: 0
// date: Sun, 24 Apr 2022 10:06:23 GMT
// location: http://localhost:4000/uri-res/N2R?urn:erisx2:AAAHEDOI6LFL6WQRTMLDJNBFK5XD65SNC7RIUYIHVBQOYITADS7PYCMWLOQ2Z7JIZTCNOXG2YKLY2LMR3J2HSU6WJ7Z5KULPDFRBBGTLOI
// server: Cowboy
// x-request-id: FuiXwTN32oZi1sUAACSj
// Request duration: 0.222990s
#+END_SRC

The activity:

#+BEGIN_SRC restclient :exports both
GET http://localhost:4000/uri-res/N2R?urn:erisx2:AAAHEDOI6LFL6WQRTMLDJNBFK5XD65SNC7RIUYIHVBQOYITADS7PYCMWLOQ2Z7JIZTCNOXG2YKLY2LMR3J2HSU6WJ7Z5KULPDFRBBGTLOI
Accept: text/turtle
#+END_SRC

#+RESULTS:
#+BEGIN_SRC js
@prefix as: <https://www.w3.org/ns/activitystreams#> .
@prefix foaf: <http://xmlns.com/foaf/0.1/> .
@prefix ldp: <http://www.w3.org/ns/ldp#> .
@prefix litepub: <http://litepub.social/ns#> .
@prefix rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#> .
@prefix rdfs: <http://www.w3.org/2000/01/rdf-schema#> .
@prefix xsd: <http://www.w3.org/2001/XMLSchema#> .

<urn:erisx2:AAAHEDOI6LFL6WQRTMLDJNBFK5XD65SNC7RIUYIHVBQOYITADS7PYCMWLOQ2Z7JIZTCNOXG2YKLY2LMR3J2HSU6WJ7Z5KULPDFRBBGTLOI>
    a as:Create ;
    as:actor <http://localhost:4000/users/alice> ;
    as:object <urn:erisx2:AAADWQO3SAOX6M4H54E2AFTDSXDOOZZPB42IIQZOEIJB4TP5BTATRGOJKUOVBNDPY6YDAGUPUJF7ECBS3CA5JTXFODATM4YI7JP2MDYLK4> ;
    as:published "2022-04-24T10:06:23"^^xsd:dateTime ;
    as:to <http://localhost:4000/users/bob> .

// GET http://localhost:4000/uri-res/N2R?urn:erisx2:AAAHEDOI6LFL6WQRTMLDJNBFK5XD65SNC7RIUYIHVBQOYITADS7PYCMWLOQ2Z7JIZTCNOXG2YKLY2LMR3J2HSU6WJ7Z5KULPDFRBBGTLOI
// HTTP/1.1 200 OK
// cache-control: max-age=0, private, must-revalidate
// content-length: 785
// content-type: text/turtle; charset=utf-8
// date: Sun, 24 Apr 2022 10:06:57 GMT
// server: Cowboy
// x-request-id: FuiXyVHKEaCtrQMAACTD
// Request duration: 0.182574s
#+END_SRC

And the event

#+BEGIN_SRC restclient
GET http://localhost:4000/uri-res/N2R?urn:erisx2:AAADWQO3SAOX6M4H54E2AFTDSXDOOZZPB42IIQZOEIJB4TP5BTATRGOJKUOVBNDPY6YDAGUPUJF7ECBS3CA5JTXFODATM4YI7JP2MDYLK4
Accept: text/turtle
#+END_SRC

#+RESULTS:
#+BEGIN_SRC js
@prefix as: <https://www.w3.org/ns/activitystreams#> .
@prefix foaf: <http://xmlns.com/foaf/0.1/> .
@prefix ldp: <http://www.w3.org/ns/ldp#> .
@prefix litepub: <http://litepub.social/ns#> .
@prefix rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#> .
@prefix rdfs: <http://www.w3.org/2000/01/rdf-schema#> .
@prefix xsd: <http://www.w3.org/2001/XMLSchema#> .

<urn:erisx2:AAADWQO3SAOX6M4H54E2AFTDSXDOOZZPB42IIQZOEIJB4TP5BTATRGOJKUOVBNDPY6YDAGUPUJF7ECBS3CA5JTXFODATM4YI7JP2MDYLK4>
    a <http://schema.org/Event> ;
    <http://schema.org/endDate> "2020-05-02T00:00:00+01:00"^^<http://www.w3.org/2001/XMLSchemadate> ;
    <http://schema.org/name> "My super cool event" ;
    <http://schema.org/startDate> "2020-04-31T00:00:00+01:00"^^<http://www.w3.org/2001/XMLSchemadate> ;
    <http://schema.org/url> "http://website-to-my-event" ;
    as:attributedTo <http://localhost:4000/users/alice> ;
    as:published "2022-04-24T10:06:23"^^xsd:dateTime ;
    as:to <http://localhost:4000/users/bob> .

// GET http://localhost:4000/uri-res/N2R?urn:erisx2:AAADWQO3SAOX6M4H54E2AFTDSXDOOZZPB42IIQZOEIJB4TP5BTATRGOJKUOVBNDPY6YDAGUPUJF7ECBS3CA5JTXFODATM4YI7JP2MDYLK4
// HTTP/1.1 200 OK
// cache-control: max-age=0, private, must-revalidate
// content-length: 990
// content-type: text/turtle; charset=utf-8
// date: Sun, 24 Apr 2022 10:07:58 GMT
// server: Cowboy
// x-request-id: FuiX17b6BuqTZdQAAB0E
// Request duration: 0.187275s
#+END_SRC

The event can be commented on, liked or shared, like any other ActivityPub object.

Note that CPub can also return any object as JSON-LD:

#+BEGIN_SRC restclient
GET http://localhost:4000/uri-res/N2R?urn:erisx2:AAADWQO3SAOX6M4H54E2AFTDSXDOOZZPB42IIQZOEIJB4TP5BTATRGOJKUOVBNDPY6YDAGUPUJF7ECBS3CA5JTXFODATM4YI7JP2MDYLK4
#+END_SRC

#+RESULTS:
#+BEGIN_SRC js
{
  "@context": [
    "https://www.w3.org/ns/activitystreams#",
    "http://litepub.social/ns#",
    "http://www.w3.org/ns/ldp#"
  ],
  "attributedTo": "http://localhost:4000/users/alice",
  "http://schema.org/endDate": {
    "@value": "2020-05-02T00:00:00+01:00",
    "type": "http://www.w3.org/2001/XMLSchemadate"
  },
  "http://schema.org/name": "My super cool event",
  "http://schema.org/startDate": {
    "@value": "2020-04-31T00:00:00+01:00",
    "type": "http://www.w3.org/2001/XMLSchemadate"
  },
  "http://schema.org/url": "http://website-to-my-event",
  "id": "urn:erisx2:AAADWQO3SAOX6M4H54E2AFTDSXDOOZZPB42IIQZOEIJB4TP5BTATRGOJKUOVBNDPY6YDAGUPUJF7ECBS3CA5JTXFODATM4YI7JP2MDYLK4",
  "published": "2022-04-24T10:06:23",
  "to": "http://localhost:4000/users/bob",
  "type": "http://schema.org/Event"
}
// GET http://localhost:4000/uri-res/N2R?urn:erisx2:AAADWQO3SAOX6M4H54E2AFTDSXDOOZZPB42IIQZOEIJB4TP5BTATRGOJKUOVBNDPY6YDAGUPUJF7ECBS3CA5JTXFODATM4YI7JP2MDYLK4
// HTTP/1.1 200 OK
// cache-control: max-age=0, private, must-revalidate
// content-length: 721
// content-type: application/activity+json; charset=utf-8
// date: Sun, 24 Apr 2022 10:08:51 GMT
// server: Cowboy
// x-request-id: FuiX5AVoBw966wgAADJi
// Request duration: 0.225574s
#+END_SRC

Or [[https://www.w3.org/TR/rdf-json/][RDF/JSON]] (another JSON based encoding of RDF):

#+BEGIN_SRC restclient
GET http://localhost:4000/uri-res/N2R?urn:erisx2:AAADWQO3SAOX6M4H54E2AFTDSXDOOZZPB42IIQZOEIJB4TP5BTATRGOJKUOVBNDPY6YDAGUPUJF7ECBS3CA5JTXFODATM4YI7JP2MDYLK4
Accept: application/rdf+json
#+END_SRC

#+RESULTS:
#+BEGIN_SRC js
{
  "urn:erisx2:AAADWQO3SAOX6M4H54E2AFTDSXDOOZZPB42IIQZOEIJB4TP5BTATRGOJKUOVBNDPY6YDAGUPUJF7ECBS3CA5JTXFODATM4YI7JP2MDYLK4": {
    "http://schema.org/endDate": [
      {
        "datatype": "http://www.w3.org/2001/XMLSchemadate",
        "type": "literal",
        "value": "2020-05-02T00:00:00+01:00"
      }
    ],
    "http://schema.org/name": [
      {
        "type": "literal",
        "value": "My super cool event"
      }
    ],
    "http://schema.org/startDate": [
      {
        "datatype": "http://www.w3.org/2001/XMLSchemadate",
        "type": "literal",
        "value": "2020-04-31T00:00:00+01:00"
      }
    ],
    "http://schema.org/url": [
      {
        "type": "literal",
        "value": "http://website-to-my-event"
      }
    ],
    "http://www.w3.org/1999/02/22-rdf-syntax-ns#type": [
      {
        "type": "uri",
        "value": "http://schema.org/Event"
      }
    ],
    "https://www.w3.org/ns/activitystreams#attributedTo": [
      {
        "type": "uri",
        "value": "http://localhost:4000/users/alice"
      }
    ],
    "https://www.w3.org/ns/activitystreams#published": [
      {
        "datatype": "http://www.w3.org/2001/XMLSchema#dateTime",
        "type": "literal",
        "value": "2022-04-24T10:06:23"
      }
    ],
    "https://www.w3.org/ns/activitystreams#to": [
      {
        "type": "uri",
        "value": "http://localhost:4000/users/bob"
      }
    ]
  }
}
// GET http://localhost:4000/uri-res/N2R?urn:erisx2:AAADWQO3SAOX6M4H54E2AFTDSXDOOZZPB42IIQZOEIJB4TP5BTATRGOJKUOVBNDPY6YDAGUPUJF7ECBS3CA5JTXFODATM4YI7JP2MDYLK4
// HTTP/1.1 200 OK
// cache-control: max-age=0, private, must-revalidate
// content-length: 1026
// content-type: application/rdf+json; charset=utf-8
// date: Sun, 24 Apr 2022 10:11:53 GMT
// server: Cowboy
// x-request-id: FuiYDxJCS9HdpuMAACqD
// Request duration: 4.707697s
#+END_SRC

** Geo data

It is also possible to post geospatial data. For example a geo-tagged note:

#+BEGIN_SRC restclient :exports both
POST http://localhost:4000/users/alice/outbox
Authorization: Bearer RS6XZHOA5E5CWWXFXK7THURZ3DBGHT6XBO3QHHJUGOEOTMHLGXMQ
Accept: text/turtle
Content-type: text/turtle

@prefix as: <https://www.w3.org/ns/activitystreams#> .
@prefix geo: <http://www.w3.org/2003/01/geo/wgs84_pos#> .

<>
    a as:Create ;
    as:to <http://localhost:4000/users/bob> ;
    as:object _:object .

_:object
    a as:Note ;
    as:content "The water here is amazing!"@en ;
    geo:lat 46.794932821448725 ;
    geo:long 10.300304889678957 .

#+END_SRC

#+RESULTS:
#+BEGIN_SRC js
// POST http://localhost:4000/users/alice/outbox
// HTTP/1.1 201 Created
// Location: http://localhost:4000/objects?iri=urn%3Aerisx%3AAAAAADFXIQY4LSBEQ7BBSFKPXO6D2Y7AYJ6ABAD2V4MHGL2USQKH5ZKC2VBATFJLS7JRHFAHTCGE7DSXEXWBPLODKDMOI2TLGPW2BGKX7G4A
// cache-control: max-age=0, private, must-revalidate
// content-length: 0
// date: Mon, 27 Jul 2020 10:03:34 GMT
// server: Cowboy
// x-request-id: FiWS68CX3xx2EY0AAB7h
// Request duration: 0.072037s
#+END_SRC

A geo-tagged note has been created:

#+BEGIN_SRC restclient :exports both
GET http://localhost:4000/objects?iri=urn%3Aerisx%3AAAAAADFXIQY4LSBEQ7BBSFKPXO6D2Y7AYJ6ABAD2V4MHGL2USQKH5ZKC2VBATFJLS7JRHFAHTCGE7DSXEXWBPLODKDMOI2TLGPW2BGKX7G4A
Accept: text/turtle
#+END_SRC

#+RESULTS:
#+BEGIN_SRC js
@prefix rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#> .
@prefix rdfs: <http://www.w3.org/2000/01/rdf-schema#> .
@prefix xsd: <http://www.w3.org/2001/XMLSchema#> .
@prefix ldp: <http://www.w3.org/ns/ldp#> .
@prefix foaf: <http://xmlns.com/foaf/0.1/> .
@prefix as: <https://www.w3.org/ns/activitystreams#> .

<urn:erisx:AAAAADFXIQY4LSBEQ7BBSFKPXO6D2Y7AYJ6ABAD2V4MHGL2USQKH5ZKC2VBATFJLS7JRHFAHTCGE7DSXEXWBPLODKDMOI2TLGPW2BGKX7G4A>
    a as:Create ;
    as:actor <http://localhost:4000/users/alice> ;
    as:object <urn:erisx:AAAABILVVDOAGFEMM76LEU4LB63RPUG53DEMNGIHWTDZET5EE77KSA36IKYKIBWQ5I3MWRF6L3W3JZS74SLTIBJ2NATKIY4WY5MYY2T2GF6A> ;
    as:to <http://localhost:4000/users/bob> .

// GET http://localhost:4000/objects?iri=urn%3Aerisx%3AAAAAADFXIQY4LSBEQ7BBSFKPXO6D2Y7AYJ6ABAD2V4MHGL2USQKH5ZKC2VBATFJLS7JRHFAHTCGE7DSXEXWBPLODKDMOI2TLGPW2BGKX7G4A
// HTTP/1.1 200 OK
// cache-control: max-age=0, private, must-revalidate
// content-length: 685
// content-type: text/turtle; charset=utf-8
// date: Mon, 27 Jul 2020 10:03:52 GMT
// server: Cowboy
// x-request-id: FiWS7_FGi1eKdCIAAB8B
// Request duration: 0.011451s
#+END_SRC

#+BEGIN_SRC restclient :exports both
GET http://localhost:4000/objects?iri=urn:erisx:AAAABILVVDOAGFEMM76LEU4LB63RPUG53DEMNGIHWTDZET5EE77KSA36IKYKIBWQ5I3MWRF6L3W3JZS74SLTIBJ2NATKIY4WY5MYY2T2GF6A
Accept: text/turtle
#+END_SRC

#+RESULTS:
#+BEGIN_SRC js
@prefix rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#> .
@prefix rdfs: <http://www.w3.org/2000/01/rdf-schema#> .
@prefix xsd: <http://www.w3.org/2001/XMLSchema#> .
@prefix ldp: <http://www.w3.org/ns/ldp#> .
@prefix foaf: <http://xmlns.com/foaf/0.1/> .
@prefix as: <https://www.w3.org/ns/activitystreams#> .

<urn:erisx:AAAABILVVDOAGFEMM76LEU4LB63RPUG53DEMNGIHWTDZET5EE77KSA36IKYKIBWQ5I3MWRF6L3W3JZS74SLTIBJ2NATKIY4WY5MYY2T2GF6A>
    a as:Note ;
    <http://www.w3.org/2003/01/geo/wgs84_pos#lat> 46.794932821448725 ;
    <http://www.w3.org/2003/01/geo/wgs84_pos#long> 10.300304889678957 ;
    as:content "The water here is amazing!"@en .

// GET http://localhost:4000/objects?iri=urn:erisx:AAAABILVVDOAGFEMM76LEU4LB63RPUG53DEMNGIHWTDZET5EE77KSA36IKYKIBWQ5I3MWRF6L3W3JZS74SLTIBJ2NATKIY4WY5MYY2T2GF6A
// HTTP/1.1 200 OK
// cache-control: max-age=0, private, must-revalidate
// content-length: 641
// content-type: text/turtle; charset=utf-8
// date: Mon, 27 Jul 2020 10:04:46 GMT
// server: Cowboy
// x-request-id: FiWS_KG3uMIW4VoAAB9B
// Request duration: 0.018176s
#+END_SRC

A client that understands what ~geo:lat~ and ~geo:long~ means could show this note on a map.

See [[https://gitlab.com/miaEngiadina/geopub][GeoPub]] for a client that understands ~geo:lat~ and ~geo:long~.


* NodeInfo

CPub supports the [[https://github.com/jhass/nodeinfo/blob/main/PROTOCOL.md][NodeInfo]] protocol:

#+BEGIN_SRC restclient :exports both
GET http://localhost:4000/nodeinfo/2.1
#+END_SRC

#+RESULTS:
#+BEGIN_SRC js
{
  "metadata": {},
  "openRegistrations": null,
  "protocols": [
    "activitypub"
  ],
  "services": {
    "inbound": [],
    "outbound": []
  },
  "software": {
    "name": "cpub",
    "repository": "https://gitlab.com/openengiadina/cpub",
    "version": "0.3.0-dev"
  },
  "usage": {
    "users": {
      "total": 0
    }
  },
  "version": "2.1"
}
// GET http://localhost:4000/nodeinfo/2.1
// HTTP/1.1 200 OK
// cache-control: max-age=0, private, must-revalidate
// content-length: 256
// content-type: application/json; profile=http://nodeinfo.diaspora.software/ns/schema/2.1#
// date: Sun, 24 Apr 2022 10:15:39 GMT
// server: Cowboy
// x-request-id: FuiYRDRxODppcw4AAC-j
// Request duration: 0.176847s
#+END_SRC

* WebFinger

CPub supports the [[https://datatracker.ietf.org/doc/html/rfc7033][WebFinger protocol (RFC7033)]]:

#+BEGIN_SRC restclient :exports both
GET http://localhost:4000/.well-known/webfinger?resource=acct:alice@localhost
#+END_SRC

#+RESULTS:
#+BEGIN_SRC js
{
  "aliases": [
    "http://localhost:4000/users/alice"
  ],
  "links": [
    {
      "href": "http://localhost:4000/users/alice",
      "rel": "http://webfinger.net/rel/profile-page",
      "type": "text/html"
    },
    {
      "href": "http://localhost:4000/users/alice",
      "rel": "self",
      "type": "application/activity+json"
    },
    {
      "href": "http://localhost:4000/users/alice",
      "rel": "self",
      "type": "application/ld+json; profile=\"https://www.w3.org/ns/activitystreams\""
    }
  ],
  "subject": "acct:alice@localhost"
}
// GET http://localhost:4000/.well-known/webfinger?resource=acct:alice@localhost
// HTTP/1.1 200 OK
// cache-control: max-age=0, private, must-revalidate
// content-length: 433
// content-type: application/json; charset=utf-8
// date: Sun, 24 Apr 2022 10:20:23 GMT
// server: Cowboy
// x-request-id: FuiYhtiINKU-TAsAAC_D
// Request duration: 0.183405s
#+END_SRC
